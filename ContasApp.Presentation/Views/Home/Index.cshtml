@{Layout = "~/Views/Shared/_AdminLayout.cshtml";}

@model ContasApp.Presentation.Models.DashboardViewModel

<h5 class="text-center">Seja bem vindo ao sistema!</h5>
<p class="text-center">Resumo financeiro do mês de Julho/2023</p>

@using (Html.BeginForm())
{
    <div class="row mb-2">
        <div class="col-md-2">
            @Html.DropDownListFor(model => model.mes, ViewBag.Meses as List<SelectListItem>, new { @class = "form-select" })
        </div>

        <div class="col-md-2">
            @Html.DropDownListFor(model => model.ano, ViewBag.Anos as List<SelectListItem>,new { @class = "form-select" })
        </div>

        <div class="col-md-8">
            <input type="submit" class="btn btn-primary" value="Aplicar filtro"/>
        </div>
    </div>
}


<div class="row mb-5">
    <div class="col">
        <div id="graficoTipos"></div>
    </div>
    <div class="col">
        <div id="graficoCategorias"></div>
    </div>
</div>

@section scripts 
{   
    <script>
        const dadosPizza = [];
        const dadosBarras = [];
    </script>
    @foreach (var item in ViewBag.ReceitasEDespesas)
    {
        <script>
            dadosPizza.push(['@item.Nome', @item.Valor]);
        </script>
    }

    @foreach (var item in ViewBag.TotalCategorias)
    {
        <script>
            dadosBarras.push({ categoria: '@item.Categoria', valor: parseFloat(@item.Total)});
        </Script>        
    }
    <script>
            // Cores para os dados
            const coresPizza = ['#5cb85c', '#d9534f'];
            const coresBarras = ['#FFA500', '#008000', '#0000FF', '#800080'];

            // Configurações do gráfico de pizza
            const opcoesPizza = {
                chart: {
                    type: 'pie'
                },
                title: {
                    text: 'Contas a Receber e Contas a Pagar'
                },
                series: [{
                    name: 'Valor',
                    data: dadosPizza
                }],
                plotOptions: {
                    pie: {
                        colors: coresPizza,
                        innerSize: '50%',
                        showInLegend: true,
                        dataLabels: {
                        enabled: false
                    },
                  }
                },
            };

            // Configurações do gráfico de barras
            const opcoesBarras = {
                chart: {
                    type: 'column'
                },
                title: {
                    text: 'Valor de Contas por Categoria'
                },
                xAxis: {
                    categories: dadosBarras.map(item => item.categoria)
                },
                yAxis: {
                    title: {
                        text: 'Valor'
                    }
                },
                series: [{
                    name: 'Valor',
                    data: dadosBarras.map(item => item.valor)
                }],
               
            };

            // Renderizar os gráficos
            Highcharts.chart('graficoTipos', opcoesPizza);
            Highcharts.chart('graficoCategorias', opcoesBarras);

        </script>
}


